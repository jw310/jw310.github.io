[{"title":"CSS偽類與偽元素","url":"%2F2019%2F06%2F05%2FCSS%2F","content":"### 偽元素 (pseudo element) 和偽類 (pseudo class) 差在哪\n\n有時候 CSS 裡會出現單冒號 : 跟雙冒號 :: 的符號，\n單冒號開頭的是偽類 (pseudo class) ，\n雙冒號開頭的是偽元素 (pseudo element) 。\n\n一般常見的偽類有:\n1. 動態：:link、:hover、:active、:focus、:visited\n1. 元素狀態：:disabled、:enabled、:checked\n1. 結構：:root、:nth-child、:nth-last-child、:nth-of-type、:nth-last-of-type、:first-child、:last-child、:first-of-type、:last-of-type、:only-child、:only-of-type、:empty\n\n偽元素有:\n1. ::first-line：選取第一行\n1. ::first-letter：選取第一個字\n1. ::before：從選取元素的前面加入字串\n1. ::after：從選取元素的後面加入字串\n1. ::selection：選取文字反白後\n\n\n參考來源：\n[oxxostudioCSS 偽類 child 和 of-type](https://www.oxxostudio.tw/articles/201405/css-selector.html)","tags":["CSS"],"categories":["CSS"]},{"title":"Markdown語法","url":"%2F2019%2F05%2F29%2FMarkdown%E8%AA%9E%E6%B3%95%2F","content":"*Markdown*\n\nMarkdown 是一種輕量級標記式語言它有純文字標記的特性，讓編寫的可讀性提升不少。目前已有不少網站都使用 Markdown 來撰寫文件或是在網站上發表文章。\n\n現在來介紹幾個常用的語法:\n\n### 粗體\n\n語法\n`***bold***`\n顯示畫面\n***bold***\n\n### 標題字\n語法\n`# This is an tag`\n顯示畫面\n# This is an tag\n\n### 列表\n\n語法\n{% asset_img 1.png %}\n顯示畫面\n* item 1\n* item 2\n   * item 2a\n   * item 2b\n\n### 編號列表\n\n語法\n{% asset_img 2.png %}\n顯示畫面\n1. Item 1\n1. Item 2\n1. Item 3\n   1. Item 3a\n   1. Item 3b\n\n### CheckBox\n\n括號中的 x 就代表此項目是有勾選的，它並不會主動紀錄勾選過的內容，所以使用時要注意確認。\n\n`- [x] This is a complete item`\n`- [  ] This is an incomplete item`\n\n顯示畫面\n- [x] This is a complete item\n- [ ] This is an incomplete item\n\n\n### 區塊\n\n區塊分為小區塊跟大區塊，通常用於一段相關內容的撰寫，一小段文字或是註釋可用小區塊來表示，內容較多又不想跟一般段落內容混在一起的話，則會用大區塊來表示。\n小區塊語法：\n```\n`Format one word or one line`\n```\n大區塊語法：\n```\n    code (4 spaces indent)\n```\n顯示畫面：\n\n`Format one word or one line`\n\n    code (4 spaces indent)\n\n### 程式碼\n\n只要使用三個反引號加上語言簡稱就可以了。\n高亮程式碼顯示語法\n    \n````js\nvar n=1;\nvar b=2,c=3;\neval('a'+n+'=b*c');\n````\n    \n### 圖片\n\n插入圖片語法\n`![GITHUB](_圖片網址 \"圖片名稱\"_)`\n```\n{% asset_img Steve.jpg This is an image %}\n```\n![GITHUB](_圖片網址 \"圖片名稱\"_)\n{% asset_img Steve.jpg This is an image %}\n\n### 階層式區塊\n#### 階層式區塊在表現結構或功能關係上是相當好用的呈現形式\n語法：\n\n\\> Quote one sentences\n\\>>Quote two sentences\n\\>>Quote two sentences\n\\>>>Quote three sentences\n\n顯示結果：\n> Quote one sentences\n>>Quote two sentences\n>>Quote two sentences\n>>>Quote three sentences\n\n### Images\n\n![GitHub Logo](/images/logo.png)\nFormat: ![Alt Text](url)\n\n### Links\n\n語法\n`http://github.com - automatic!`\n`[GitHub](http://github.com)`\n\n顯示\nhttp://github.com - automatic!\n[GitHub](http://github.com)\n\n### Inline code\n\nI think you should use an\n`<addr>` element here instead.\n\n### Tables\n\n語法\n\nFirst Header | Second Header\n-----------------| ---------------------\nContent from cell 1 | Content from cell 2\nContent in the first column | Content in the second column\n\n顯示\n\nFirst Header | Second Header\n----------------- | ---------------------\nContent from cell 1 | Content from cell 2\nContent in the first column | Content in the second column\n\n\n\n參考來源：\n[Markdown - 易編易讀，優雅的寫文吧！ - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天](https://ithelp.ithome.com.tw/articles/10203758)\n[Mastering Markdown · GitHub Guides](https://guides.github.com/features/mastering-markdown/)\n[Markdown文件](https://markdown.tw/#autoescape)\n\n","tags":["Markdown"],"categories":["Markdown"]},{"title":"JavaScript eval()的用法","url":"%2F2019%2F05%2F29%2FJavaScript%20eval%2F","content":"eval() 是個滿好用的函式，用途也多種，常常會使用到。\n\neval 是 evaluates 。例如：\n```js\nvar n=1;\nvar b=2,c=3;\neval('a'+n+'=b*c');\n```\n\n上面結果會變成 a1=b*c ，就是變數 a1 的結果為 6。\n\n由以上可知，eval() 是把一組字串，當作指令來執行，並得出結果。\n實作時，在訂單處理上應用較廣，例如以下是份簡單訂單：\n\n數量 | 單價 | 小計\n-------|--------|------\nQ1  |  P1  |  T1\nQ2  |  P2  | T2\nQ3  |  P3  | T3\n\n用編號來進行不同筆數訂單欄位命名，而不是每個欄位獨立命名，顯示，在輸入數量及單價後，小計要能自動計算。\n\n假設這份表單名為 order，所以：\n\ndocument.order.T1.value=document.order.Q1.value\\*document.order.P1.value;\ndocument.order.T2.value=document.order.Q2.value\\*document.order.P2.value;\ndocument.order.T3.value=document.order.Q3.value\\*document.order.P3.value;\n\n你是不是會想用 for 來跑迴圈？可是，T1、;Q1 這些欄位名稱一直在變，怎麼跑迴圈呢？這時，eval() 就派上用場了，eval() 把「唸的內容」當結果執行，這個例子怎麼唸呢？\n\n「第一個 T 的值等於第一個 Q 的值乘以第一個 P 的值」，換成 \n\n```js\neval()：\nvar form=document.order;\nfor (var i=1;i<=3;i++){\n    eval('form.T'+i+'value=form.Q'+i+'value(form.P'+i+'value');\n}\n```\n把 eval() 裡的字串，i 的值分別用 1,2,3 套入，結果和前面寫一大串三行的效果一模一樣。\n\n參考來源：\n[icodding愛程式: JavaScript 的 eval() 用法介紹](http://icodding.blogspot.com/2015/12/javascript-eval.html)","tags":["JavaScript"],"categories":["JavaScript"]},{"title":"Hello World","url":"%2F2019%2F05%2F26%2Fhello-world%2F","content":"{% asset_img Steve.jpg This is an image %}\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n"}]